<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="tests_2coordinates_8cpp" kind="file" language="C++">
    <compoundname>coordinates.cpp</compoundname>
    <includes local="no">assert.h</includes>
    <includes refid="tests_8h" local="yes">tests.h</includes>
    <includes refid="coordinates_8h" local="yes">gmxcpp/coordinates.h</includes>
    <incdepgraph>
      <node id="262">
        <label>gmxcpp/xdrfile.h</label>
        <link refid="xdrfile_8h"/>
      </node>
      <node id="256">
        <label>assert.h</label>
      </node>
      <node id="255">
        <label>tests/coordinates.cpp</label>
        <link refid="tests/coordinates.cpp"/>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>cmath</label>
      </node>
      <node id="261">
        <label>gmxcpp/coordinates.h</label>
        <link refid="coordinates_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>vector</label>
      </node>
      <node id="259">
        <label>math.h</label>
      </node>
      <node id="257">
        <label>tests.h</label>
        <link refid="tests_8h_source"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tests_2coordinates_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/tests/coordinates.cpp" line="6" column="1" bodyfile="/home/wes/libgmxcpp/tests/coordinates.cpp" bodystart="6" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coordinates_8h" kindref="compound">gmxcpp/coordinates.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>()<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>some<sp/>basic<sp/>constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>==0);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>==1);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>==2);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(DIM==3);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>coordinates<sp/>class<sp/>overloaded<sp/>operations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>1.2;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>-2.8;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z1<sp/>=<sp/>3.1;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x2<sp/>=<sp/>-4.92;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2<sp/>=<sp/>5.13;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z2<sp/>=<sp/>6.04;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>c1(x1,y1,z1);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>c2(x2,y2,z2);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>c3;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>c4;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x1,c1.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y1,c1.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z1,c1.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x2,c2.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y2,c2.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z2,c2.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>c2<sp/>-<sp/>c1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x2-x1,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y2-y1,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z2-z1,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>c4<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>-=<sp/>c2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)-x2,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)-y2,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)-z2,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>-=<sp/>c3;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(0.0,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(0.0,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(0.0,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>c2<sp/>+<sp/>c1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x2+x1,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y2+y1,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z2+z1,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>c4<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>+=<sp/>c1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)+x1,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)+y1,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)+z1,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>c2<sp/>/<sp/>5.8;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x2/5.8,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y2/5.8,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z2/5.8,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>c4<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>/=<sp/>3.14;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)/3.14,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)/3.14,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)/3.14,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>c1<sp/>*<sp/>1.2;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x1*1.2,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y1*1.2,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z1*1.2,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>=<sp/>1.2<sp/>*<sp/>c1;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(x1*1.2,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(y1*1.2,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(z1*1.2,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>c4<sp/>=<sp/>c3;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>c3<sp/>*=<sp/>3.14;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)*3.14,c3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>)));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)*3.14,c3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>)));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(c4.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)*3.14,c3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>)));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wes/libgmxcpp/tests/coordinates.cpp"/>
  </compounddef>
</doxygen>
