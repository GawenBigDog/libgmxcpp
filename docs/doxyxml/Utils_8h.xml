<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="Utils_8h" kind="file" language="C++">
    <compoundname>Utils.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includes local="no">fstream</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string</includes>
    <includes local="no">time.h</includes>
    <includes local="no">vector</includes>
    <includes refid="coordinates_8h" local="yes">gmxcpp/coordinates.h</includes>
    <includes refid="triclinicbox_8h" local="yes">gmxcpp/triclinicbox.h</includes>
    <includes refid="xdrfile_8h" local="yes">gmxcpp/xdrfile.h</includes>
    <includes refid="xdrfile__xtc_8h" local="yes">gmxcpp/xdrfile_xtc.h</includes>
    <includedby refid="example_8cpp" local="yes">example/example.cpp</includedby>
    <includedby refid="Frame_8h" local="yes">include/gmxcpp/Frame.h</includedby>
    <includedby refid="Trajectory_8h" local="yes">include/gmxcpp/Trajectory.h</includedby>
    <includedby refid="src_2Utils_8cpp" local="yes">src/Utils.cpp</includedby>
    <includedby refid="tests_2Utils_8cpp" local="yes">tests/Utils.cpp</includedby>
    <incdepgraph>
      <node id="172">
        <label>sys/stat.h</label>
      </node>
      <node id="181">
        <label>gmxcpp/xdrfile.h</label>
        <link refid="xdrfile_8h"/>
      </node>
      <node id="176">
        <label>stdlib.h</label>
      </node>
      <node id="170">
        <label>cmath</label>
      </node>
      <node id="177">
        <label>string</label>
      </node>
      <node id="183">
        <label>gmxcpp/xdrfile_xtc.h</label>
        <link refid="xdrfile__xtc_8h_source"/>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>fstream</label>
      </node>
      <node id="180">
        <label>gmxcpp/coordinates.h</label>
        <link refid="coordinates_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>include/gmxcpp/Utils.h</label>
        <link refid="Utils.h"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>vector</label>
      </node>
      <node id="178">
        <label>time.h</label>
      </node>
      <node id="174">
        <label>math.h</label>
      </node>
      <node id="173">
        <label>iostream</label>
      </node>
      <node id="182">
        <label>gmxcpp/triclinicbox.h</label>
        <link refid="triclinicbox_8h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>algorithm</label>
      </node>
      <node id="175">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="190">
        <label>src/Frame.cpp</label>
        <link refid="Frame_8cpp"/>
      </node>
      <node id="187">
        <label>include/gmxcpp/Trajectory.h</label>
        <link refid="Trajectory_8h"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>example/example.cpp</label>
        <link refid="example_8cpp"/>
      </node>
      <node id="184">
        <label>include/gmxcpp/Utils.h</label>
        <link refid="Utils.h"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>include/gmxcpp/Frame.h</label>
        <link refid="Frame_8h"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>src/Utils.cpp</label>
        <link refid="src_2Utils_8cpp"/>
      </node>
      <node id="188">
        <label>include/gmxcpp/Clusters.h</label>
        <link refid="Clusters_8h_source"/>
      </node>
      <node id="189">
        <label>src/Trajectory.cpp</label>
        <link refid="src_2Trajectory_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="Utils_8h_1a4099af9f42d20e2c96f2cdb70c94a470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates pbc</definition>
        <argsstring>(coordinates a, triclinicbox box)</argsstring>
        <name>pbc</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Adjusts for periodic boundary condition. </para>        </briefdescription>
        <detaileddescription>
<para>User passes a vector, most likely a vector pointing from one atom to another in the simulation. This function adjusts the vector such that if it is longer than 1/2 the box size it accounts for the periodic boundary. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be passed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>The box dimensions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector after pbc accounted for. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="63" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="34" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a12a2fec80054cc52202d1a7a10927ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates cross</definition>
        <argsstring>(coordinates a, coordinates b)</argsstring>
        <name>cross</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Calculates the cross product. </para>        </briefdescription>
        <detaileddescription>
<para>Gets the cross product between vectors a and b and returns it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector to be crossed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector to be crossed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The resultant vector of the cross of a and b. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="71" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="62" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a586470c77b3714c63557a4cedc32428f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double distance</definition>
        <argsstring>(coordinates a, coordinates b, triclinicbox box)</argsstring>
        <name>distance</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Calculates the distance between atom a and atom b. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Distance </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First atom in distance calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second atom in distance calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>Box dimensions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="79" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a8da6baad0cf85edfeabbd430a7ed756b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double distance2</definition>
        <argsstring>(coordinates a, coordinates b, triclinicbox box)</argsstring>
        <name>distance2</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Calculates the distance squared between atom a and atom b. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Distance </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First atom in distance squared calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second atom in distance squared calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>Box dimensions </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="87" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1ab61966893149c8eae99b13f4188b72a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dot</definition>
        <argsstring>(coordinates a, coordinates b)</argsstring>
        <name>dot</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Calculates the dot product between two vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector in dot product </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector in dot product </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Dot product of a and b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="94" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a02c02ae7a5267d41eb459044837b15f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double magnitude</definition>
        <argsstring>(coordinates x)</argsstring>
        <name>magnitude</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Calculates the magnitude of a vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Magnitude </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector for which magnitude is desired </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="100" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a3b4c6f8accdf319963f3bb302dddb342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fileExists</definition>
        <argsstring>(string filename)</argsstring>
        <name>fileExists</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Checks if a file exists. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Whether or not the file exists </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="106" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1ac615e69d32acd21723bc7885c751ce84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double volume</definition>
        <argsstring>(triclinicbox box)</argsstring>
        <name>volume</name>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Calculates the volume of simulation box. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>Box dimensions </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Volume of box </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="112" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a893adf43d84237eeec9a1724947f96c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, coordinates xyz)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>xyz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints out coordinates cleanly with &lt;&lt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="115" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a2d8532f27568a6768be9d5d88b654844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, triclinicbox box)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints out box coordinates cleanly with &lt;&lt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="118" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a40b2c92d6d55e1237d5eeea1f7c8eefa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates gen_sphere_point</definition>
        <argsstring>(coordinates center, double r)</argsstring>
        <name>gen_sphere_point</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>center</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Generates a random point on a sphere. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>The center of the sphere. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the sphere. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coordinates of the random point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="125" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="130" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1aa3a7da7df89023853f4fe83eac4be783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates gen_sphere_point</definition>
        <argsstring>(double r)</argsstring>
        <name>gen_sphere_point</name>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Generates a random point on a sphere at the origin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius of the sphere. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The coordinates of the random point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="131" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a14b2315678e88676b75181d4834cfd94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates gen_sphere_point</definition>
        <argsstring>()</argsstring>
        <name>gen_sphere_point</name>
        <briefdescription>
<para>Generates a random point on a unit sphere at the origin. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The coordinates of the random point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="136" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1a48bd038d5be96a55c34df3ef5717559e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double get_sphere_accept_ratio</definition>
        <argsstring>(vector&lt; coordinates &gt; sites, double r, double rand_n, triclinicbox box)</argsstring>
        <name>get_sphere_accept_ratio</name>
        <param>
          <type>vector&lt; <ref refid="classcoordinates" kindref="compound">coordinates</ref> &gt;</type>
          <declname>sites</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rand_n</declname>
        </param>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Gets the acceptance ratio of randomly generated point on a sphere. </para>        </briefdescription>
        <detaileddescription>
<para>Points are randomly generated around all sites listed in the sites vector at distance r away from each site. The resulting ratio is sum of the number of points accepted per points generated. In other words each site will have rand_n points generated. The points that are closest to that site compared to the other sites are accepted. The ratio for that site is accepted/rand_n. The sum of this ratio is what is returned. This can be useful in calculating surface areas or volumes of a group of atoms or molecules. See get_surf_area. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sites</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates of sites in the group / molecule. For example, the carbons in an alkane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius to be used in determining the surface area. For example, to determine the SASA use the appropriate radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rand_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of randomly generated points to be used for each site. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>The box dimensions for the frame in question. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>The total surface area of the group / molecule. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="156" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="181" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="Utils_8h_1af3eeb8eff3d70f23ace4259b34a2a5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double get_surf_area</definition>
        <argsstring>(vector&lt; coordinates &gt; sites, double r, double rand_n, triclinicbox box)</argsstring>
        <name>get_surf_area</name>
        <param>
          <type>vector&lt; <ref refid="classcoordinates" kindref="compound">coordinates</ref> &gt;</type>
          <declname>sites</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rand_n</declname>
        </param>
        <param>
          <type><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
<para>Gets the surface area of a group of atoms. </para>        </briefdescription>
        <detaileddescription>
<para>Gets the surface area of a group of atoms (could be a molecule) defined by vector of coordinates. Randomly generated points on a sphere of radius r are used at each site in order to get an acceptance ratio. The surface area contributed from each site is simply the surface area of a sphere multiplied by the acceptance ratio for that site. The total surface area is the sum of the surface areas for each site. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sites</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinates of sites in the group / molecule. For example, the carbons in an alkane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The radius to be used in determining the surface area. For example, to determine the SASA use the appropriate radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rand_n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of randomly generated points to be used for each site. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para>The box dimensions for the frame in question. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para>The total surface area of the group / molecule. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h" line="174" column="1" bodyfile="/home/wes/libgmxcpp/src/Utils.cpp" bodystart="240" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Some useful functions for processing trajectories. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>James W. Barnett <ulink url="mailto:jbarnet4@tulane.edu">jbarnet4@tulane.edu</ulink> </para></simplesect>
<simplesect kind="date"><para>December 5, 2014</para></simplesect>
This file has some helper functions for calculating things like distances, periodic boundary conditions, etc. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>libgmxcpp</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2015<sp/>James<sp/>W.<sp/>Barnett<sp/>&lt;jbarnet4@tulane.edu&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT<sp/>ANY</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along<sp/>with</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>The<sp/>full<sp/>license<sp/>is<sp/>located<sp/>in<sp/>a<sp/>text<sp/>file<sp/>titled<sp/>&quot;LICENSE&quot;<sp/>in<sp/>the<sp/>root</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>directory<sp/>of<sp/>the<sp/>source.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor">#ifndef<sp/>UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coordinates_8h" kindref="compound">gmxcpp/coordinates.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="triclinicbox_8h" kindref="compound">gmxcpp/triclinicbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xdrfile_8h" kindref="compound">gmxcpp/xdrfile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmxcpp/xdrfile_xtc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/><ref refid="Utils_8h_1a4099af9f42d20e2c96f2cdb70c94a470" kindref="member">pbc</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>a,<sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/><ref refid="Utils_8h_1a12a2fec80054cc52202d1a7a10927ef2" kindref="member">cross</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>a,<sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>b);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1a586470c77b3714c63557a4cedc32428f" kindref="member">distance</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>a,<sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>b,<sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1a8da6baad0cf85edfeabbd430a7ed756b" kindref="member">distance2</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>a,<sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>b,<sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1ab61966893149c8eae99b13f4188b72a0" kindref="member">dot</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>a,<sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>b);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1a02c02ae7a5267d41eb459044837b15f0" kindref="member">magnitude</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>x);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1a3b4c6f8accdf319963f3bb302dddb342" kindref="member">fileExists</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1ac615e69d32acd21723bc7885c751ce84" kindref="member">volume</ref>(<ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">ostream&amp;<sp/><ref refid="Utils_8h_1a893adf43d84237eeec9a1724947f96c1" kindref="member">operator&lt;&lt;</ref>(ostream<sp/>&amp;os,<sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>xyz);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">ostream&amp;<sp/><ref refid="Utils_8h_1a893adf43d84237eeec9a1724947f96c1" kindref="member">operator&lt;&lt;</ref>(ostream<sp/>&amp;os,<sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/><ref refid="Utils_8h_1a40b2c92d6d55e1237d5eeea1f7c8eefa" kindref="member">gen_sphere_point</ref>(<ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>center,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/><ref refid="Utils_8h_1a40b2c92d6d55e1237d5eeea1f7c8eefa" kindref="member">gen_sphere_point</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/><ref refid="Utils_8h_1a40b2c92d6d55e1237d5eeea1f7c8eefa" kindref="member">gen_sphere_point</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1a48bd038d5be96a55c34df3ef5717559e" kindref="member">get_sphere_accept_ratio</ref>(vector<sp/>&lt;coordinates&gt;<sp/>sites,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rand_n,<sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="Utils_8h_1af3eeb8eff3d70f23ace4259b34a2a5b9" kindref="member">get_surf_area</ref>(vector<sp/>&lt;coordinates&gt;<sp/>sites,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rand_n,<sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>box);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/wes/libgmxcpp/include/gmxcpp/Utils.h"/>
  </compounddef>
</doxygen>
