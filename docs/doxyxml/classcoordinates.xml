<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classcoordinates" kind="class" language="C++" prot="public">
    <compoundname>coordinates</compoundname>
    <basecompoundref prot="public" virt="non-virtual">vector&lt; double &gt;</basecompoundref>
    <includes refid="coordinates_8h" local="no">coordinates.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcoordinates_1a86731eb387a5eaf462f8a7e0bb5c7136" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>coordinates::coordinates</definition>
        <argsstring>()</argsstring>
        <name>coordinates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets size of vector to 3 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="53" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1a2a9015b471429f38279e074b8bb2cba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>coordinates::coordinates</definition>
        <argsstring>(double x, double y, double z)</argsstring>
        <name>coordinates</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor, sets size of vector to 3 and set actual coordinates </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="56" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1aac4f0985907ad28a5a4732845eada875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates coordinates::operator-</definition>
        <argsstring>(coordinates rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts two sets of coordinates together, element-by-element </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="59" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1a7b237def9339605ead4f7039311f0554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coordinates::operator-=</definition>
        <argsstring>(coordinates rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts two sets of coordinates together, element-by-element </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="62" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1ad901a36921ee3b88611ed291efdc73c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates coordinates::operator+</definition>
        <argsstring>(coordinates rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds two sets of coordinates together, element-by-element </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="65" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1af849de891b24d5d5dadd647a0fa17f26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coordinates::operator+=</definition>
        <argsstring>(coordinates rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds two sets of coordinates together, element-by-element </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="68" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1a7bce0f7c5f9ba169f313a884f1987e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates coordinates::operator/</definition>
        <argsstring>(double rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divides X, Y, and Z by a scalar </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="71" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1a35cb3a8eedef14b799b2843e31fbb074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coordinates::operator/=</definition>
        <argsstring>(double rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divides X, Y, and Z by a scalar </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="74" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcoordinates_1ae614cf17eff17dec7fbf257f5f881c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void coordinates::operator*=</definition>
        <argsstring>(double rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies X, Y, and Z by a scalar </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="77" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcoordinates_1a46d15f9ede280727847cb36dd156ab39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates operator*</definition>
        <argsstring>(coordinates lhs, double rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies X, Y, and Z by a scalar </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="80" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="friend" id="classcoordinates_1ab7d5a4ff4096d7624c3f4d6f4b71c708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
        <definition>coordinates operator*</definition>
        <argsstring>(double lhs, coordinates rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classcoordinates" kindref="compound">coordinates</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="81" column="1" bodyfile="/home/wes/libgmxcpp/src/coordinates.cpp" bodystart="95" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Cartesian coordinates. </para>    </briefdescription>
    <detaileddescription>
<para>This is just a double precision vector but it has three items automatically when contructed. Additionally one can add or subtract two sets of coordinates without having to operate on each X, Y, and Z part individually. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>coordinates</label>
        <link refid="classcoordinates"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>vector&lt; double &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>coordinates</label>
        <link refid="classcoordinates"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>vector&lt; double &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" line="49" column="1" bodyfile="/home/wes/libgmxcpp/include/gmxcpp/coordinates.h" bodystart="49" bodyend="83"/>
    <listofallmembers>
      <member refid="classcoordinates_1a86731eb387a5eaf462f8a7e0bb5c7136" prot="public" virt="non-virtual"><scope>coordinates</scope><name>coordinates</name></member>
      <member refid="classcoordinates_1a2a9015b471429f38279e074b8bb2cba9" prot="public" virt="non-virtual"><scope>coordinates</scope><name>coordinates</name></member>
      <member refid="classcoordinates_1a46d15f9ede280727847cb36dd156ab39" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator*</name></member>
      <member refid="classcoordinates_1ab7d5a4ff4096d7624c3f4d6f4b71c708" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator*</name></member>
      <member refid="classcoordinates_1ae614cf17eff17dec7fbf257f5f881c62" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator*=</name></member>
      <member refid="classcoordinates_1ad901a36921ee3b88611ed291efdc73c7" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator+</name></member>
      <member refid="classcoordinates_1af849de891b24d5d5dadd647a0fa17f26" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator+=</name></member>
      <member refid="classcoordinates_1aac4f0985907ad28a5a4732845eada875" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator-</name></member>
      <member refid="classcoordinates_1a7b237def9339605ead4f7039311f0554" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator-=</name></member>
      <member refid="classcoordinates_1a7bce0f7c5f9ba169f313a884f1987e58" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator/</name></member>
      <member refid="classcoordinates_1a35cb3a8eedef14b799b2843e31fbb074" prot="public" virt="non-virtual"><scope>coordinates</scope><name>operator/=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
