<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classIndex" kind="class" language="C++" prot="public">
    <compoundname>Index</compoundname>
    <includes refid="Index_8h" local="no">Index.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classIndex_1aa743c25c31879275f634f3db73ca6c4a" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; Index::headers</definition>
        <argsstring></argsstring>
        <name>headers</name>
        <briefdescription>
<para>The names of the groups in the index file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="59" column="1" bodyfile="/home/wes/libgmxcpp/include/gmxcpp/Index.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classIndex_1a80adb73de35c1f01640d78f4f4f2fdf2" prot="private" static="no" mutable="no">
        <type>vector&lt; vector&lt; int &gt; &gt;</type>
        <definition>vector&lt; vector &lt;int&gt; &gt; Index::locations</definition>
        <argsstring></argsstring>
        <name>locations</name>
        <briefdescription>
<para>The index locations for each group. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="64" column="1" bodyfile="/home/wes/libgmxcpp/include/gmxcpp/Index.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classIndex_1a7c2f3fb044a8cbdf8f75b8d8fe158ed3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Index::GetHeaderIndex</definition>
        <argsstring>(string groupName) const </argsstring>
        <name>GetHeaderIndex</name>
        <param>
          <type>string</type>
          <declname>groupName</declname>
        </param>
        <briefdescription>
<para>Translates the string name of a header to its correct index integer. </para>        </briefdescription>
        <detaileddescription>
<para>If the header is not present in the index file, throw an exception <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>groupName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the group. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Integer corresponding with header (used in headers vector). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="72" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1a5504e0438cd46b0860aac84aa4ddee63" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Index::isHeader</definition>
        <argsstring>(string line) const </argsstring>
        <name>isHeader</name>
        <param>
          <type>string</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Checks if a line read in is a header (group name). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>Line read in from index file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if is a header; false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="79" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1a1a390f47125e984bffe1d1690c95b06c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Index::IsIndexFile</definition>
        <argsstring>(string ndxfile) const </argsstring>
        <name>IsIndexFile</name>
        <param>
          <type>string</type>
          <declname>ndxfile</declname>
        </param>
        <briefdescription>
<para>Checks if a file is a valid index file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if is valid; false otherwise. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ndxfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of index file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="86" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="104" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1ab41ebcd1ea236c7245418ded99e6f63a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Index::PrintInfo</definition>
        <argsstring>() const </argsstring>
        <name>PrintInfo</name>
        <briefdescription>
<para>Prints info from index file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="91" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="95" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classIndex_1ae767eedba252c26cc0dc5e60f0b9ed9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Index::Index</definition>
        <argsstring>()</argsstring>
        <name>Index</name>
        <briefdescription>
<para>Blank constructor used in <ref refid="classTrajectory" kindref="compound">Trajectory</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="98" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1ab469acaa46b7cafcb92917c7d8b93b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Index::Index</definition>
        <argsstring>(string ndxfile)</argsstring>
        <name>Index</name>
        <param>
          <type>string</type>
          <declname>ndxfile</declname>
        </param>
        <briefdescription>
<para>Constructor which specifies index file. </para>        </briefdescription>
        <detaileddescription>
<para>When constructed the index file is read into the corresponding data elements of the object and can be retrieved with getter functions below. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ndxfile</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of index file to be read in. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="107" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1acb3874ae434461b6bf1fd18b24ee1de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Index::Set</definition>
        <argsstring>(string ndxfile)</argsstring>
        <name>Set</name>
        <param>
          <type>string</type>
          <declname>ndxfile</declname>
        </param>
        <briefdescription>
<para>Reads in the GROMACS index file specified. </para>        </briefdescription>
        <detaileddescription>
<para>See above constructor. This is used in the <ref refid="classTrajectory" kindref="compound">Trajectory</ref> object or when, in general, an <ref refid="classIndex" kindref="compound">Index</ref> object is created but no index file is specified initially. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="115" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="43" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1a7841a09ee52bfb8976a4f3dbffb28640" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Index::GetGroupSize</definition>
        <argsstring>(string groupName) const </argsstring>
        <name>GetGroupSize</name>
        <param>
          <type>string</type>
          <declname>groupName</declname>
        </param>
        <briefdescription>
<para>Gets the size of an index group. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>groupName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of group for which size is desired. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Size of the group. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="122" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classIndex_1a217d02daa77ff95e0aa216d7cb42c31a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Index::GetLocation</definition>
        <argsstring>(string groupName, int atomNumber) const </argsstring>
        <name>GetLocation</name>
        <param>
          <type>string</type>
          <declname>groupName</declname>
        </param>
        <param>
          <type>int</type>
          <declname>atomNumber</declname>
        </param>
        <briefdescription>
<para>Gets the index location of the atom in the group specified. </para>        </briefdescription>
        <detaileddescription>
<para>This returns in the index location of an atom relative to the entire system. That is, if you know a specific atom&apos;s location relative to an index group, i.e., it is the second atom in a group, then this gives the index number for it for the entire system, i.e., the second atom in a group might be the 300th atom in the system. Look at how an index file is formatted to understand more thoroughly. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>groupName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of group where at is located. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atomNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The location of the atom in the group. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="135" column="1" bodyfile="/home/wes/libgmxcpp/src/Index.cpp" bodystart="132" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class containing index file info. </para>    </briefdescription>
    <detaileddescription>
<para>Contains all information from an index file. When constructed the index file is read in. The names of each group are stored in headers. The locations for each group are stored in the locations vector. </para>    </detaileddescription>
    <location file="/home/wes/libgmxcpp/include/gmxcpp/Index.h" line="52" column="1" bodyfile="/home/wes/libgmxcpp/include/gmxcpp/Index.h" bodystart="52" bodyend="136"/>
    <listofallmembers>
      <member refid="classIndex_1a7841a09ee52bfb8976a4f3dbffb28640" prot="public" virt="non-virtual"><scope>Index</scope><name>GetGroupSize</name></member>
      <member refid="classIndex_1a7c2f3fb044a8cbdf8f75b8d8fe158ed3" prot="private" virt="non-virtual"><scope>Index</scope><name>GetHeaderIndex</name></member>
      <member refid="classIndex_1a217d02daa77ff95e0aa216d7cb42c31a" prot="public" virt="non-virtual"><scope>Index</scope><name>GetLocation</name></member>
      <member refid="classIndex_1aa743c25c31879275f634f3db73ca6c4a" prot="private" virt="non-virtual"><scope>Index</scope><name>headers</name></member>
      <member refid="classIndex_1ae767eedba252c26cc0dc5e60f0b9ed9b" prot="public" virt="non-virtual"><scope>Index</scope><name>Index</name></member>
      <member refid="classIndex_1ab469acaa46b7cafcb92917c7d8b93b13" prot="public" virt="non-virtual"><scope>Index</scope><name>Index</name></member>
      <member refid="classIndex_1a5504e0438cd46b0860aac84aa4ddee63" prot="private" virt="non-virtual"><scope>Index</scope><name>isHeader</name></member>
      <member refid="classIndex_1a1a390f47125e984bffe1d1690c95b06c" prot="private" virt="non-virtual"><scope>Index</scope><name>IsIndexFile</name></member>
      <member refid="classIndex_1a80adb73de35c1f01640d78f4f4f2fdf2" prot="private" virt="non-virtual"><scope>Index</scope><name>locations</name></member>
      <member refid="classIndex_1ab41ebcd1ea236c7245418ded99e6f63a" prot="private" virt="non-virtual"><scope>Index</scope><name>PrintInfo</name></member>
      <member refid="classIndex_1acb3874ae434461b6bf1fd18b24ee1de0" prot="public" virt="non-virtual"><scope>Index</scope><name>Set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
