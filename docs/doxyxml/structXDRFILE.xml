<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="structXDRFILE" kind="struct" language="C++" prot="public">
    <compoundname>XDRFILE</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structXDRFILE_1af6cedef358d64bd523930824cc26b3c4" prot="public" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* XDRFILE::fp</definition>
        <argsstring></argsstring>
        <name>fp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer to standard C library file handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="157" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structXDRFILE_1a4a218e35bce4ff042a7a3a6f3f4791c1" prot="public" static="no" mutable="no">
        <type><ref refid="structXDR" kindref="compound">XDR</ref> *</type>
        <definition>XDR* XDRFILE::xdr</definition>
        <argsstring></argsstring>
        <name>xdr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer to corresponding <ref refid="structXDR" kindref="compound">XDR</ref> handle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="158" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structXDRFILE_1a07930795c83f7e5f348e2c999115d998" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char XDRFILE::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>r=read, w=write, a=append </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="159" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structXDRFILE_1a7274b510f55945af86ae20a6da81d429" prot="public" static="no" mutable="no">
        <type>int *</type>
        <definition>int* XDRFILE::buf1</definition>
        <argsstring></argsstring>
        <name>buf1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for internal use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="160" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structXDRFILE_1a9012ee5348a016a94c5ca634def2c1e4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XDRFILE::buf1size</definition>
        <argsstring></argsstring>
        <name>buf1size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current allocated length of buf1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="161" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structXDRFILE_1a6e8d580fdf18234acfda1f382d89a2d8" prot="public" static="no" mutable="no">
        <type>int *</type>
        <definition>int* XDRFILE::buf2</definition>
        <argsstring></argsstring>
        <name>buf2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Buffer for internal use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="162" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structXDRFILE_1a71cedf31f2b15a635fa4fe20094a3133" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XDRFILE::buf2size</definition>
        <argsstring></argsstring>
        <name>buf2size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current allocated length of buf2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="163" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Contents of the abstract <ref refid="structXDRFILE" kindref="compound">XDRFILE</ref> data structure. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="24">
        <label>XDR::xdr_ops</label>
        <link refid="structXDR_1_1xdr__ops"/>
      </node>
      <node id="23">
        <label>XDR</label>
        <link refid="structXDR"/>
        <childnode refid="24" relation="usage">
          <edgelabel>x_ops</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>XDRFILE</label>
        <link refid="structXDRFILE"/>
        <childnode refid="23" relation="usage">
          <edgelabel>xdr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/wes/libgmxcpp/src/xdrfile.c" line="156" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile.c" bodystart="155" bodyend="164"/>
    <listofallmembers>
      <member refid="structXDRFILE_1a7274b510f55945af86ae20a6da81d429" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>buf1</name></member>
      <member refid="structXDRFILE_1a9012ee5348a016a94c5ca634def2c1e4" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>buf1size</name></member>
      <member refid="structXDRFILE_1a6e8d580fdf18234acfda1f382d89a2d8" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>buf2</name></member>
      <member refid="structXDRFILE_1a71cedf31f2b15a635fa4fe20094a3133" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>buf2size</name></member>
      <member refid="structXDRFILE_1af6cedef358d64bd523930824cc26b3c4" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>fp</name></member>
      <member refid="structXDRFILE_1a07930795c83f7e5f348e2c999115d998" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>mode</name></member>
      <member refid="structXDRFILE_1a4a218e35bce4ff042a7a3a6f3f4791c1" prot="public" virt="non-virtual"><scope>XDRFILE</scope><name>xdr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
