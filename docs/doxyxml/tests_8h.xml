<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="tests_8h" kind="file" language="C++">
    <compoundname>tests.h</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="tests_2coordinates_8cpp" local="yes">tests/coordinates.cpp</includedby>
    <includedby refid="tests_2Trajectory_8cpp" local="yes">tests/Trajectory.cpp</includedby>
    <includedby refid="tests_2triclinicbox_8cpp" local="yes">tests/triclinicbox.cpp</includedby>
    <includedby refid="tests_2Utils_8cpp" local="yes">tests/Utils.cpp</includedby>
    <incdepgraph>
      <node id="432">
        <label>cmath</label>
      </node>
      <node id="433">
        <label>math.h</label>
      </node>
      <node id="431">
        <label>tests/tests.h</label>
        <link refid="tests.h"/>
        <childnode refid="432" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
      </node>
      <node id="434">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tests_8h_1acd1be678f7c303f2f1448ce56716f892" prot="public" static="no" mutable="no">
        <type>double const</type>
        <definition>double const TOL</definition>
        <argsstring></argsstring>
        <name>TOL</name>
        <initializer>= pow(10,-5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/tests/tests.h" line="6" column="1" bodyfile="/home/wes/libgmxcpp/tests/tests.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tests_8h_1a11a167922dece17f0144fdf9651c9f1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_equal</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>test_equal</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/tests/tests.h" line="8" column="1" bodyfile="/home/wes/libgmxcpp/tests/tests.h" bodystart="8" bodyend="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TOL<sp/>=<sp/>pow(10,-5);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test_equal(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test<sp/>=<sp/>(std::abs(a-b)<sp/>&lt;=<sp/>TOL);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wes/libgmxcpp/tests/tests.h"/>
  </compounddef>
</doxygen>
