<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="xdrfile__xtc_8c" kind="file" language="C++">
    <compoundname>xdrfile_xtc.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="xdrfile_8h" local="yes">gmxcpp/xdrfile.h</includes>
    <includes refid="xdrfile__xtc_8h" local="yes">gmxcpp/xdrfile_xtc.h</includes>
    <incdepgraph>
      <node id="428">
        <label>gmxcpp/xdrfile.h</label>
        <link refid="xdrfile_8h"/>
      </node>
      <node id="427">
        <label>stdlib.h</label>
      </node>
      <node id="429">
        <label>gmxcpp/xdrfile_xtc.h</label>
        <link refid="xdrfile__xtc_8h_source"/>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>src/xdrfile_xtc.c</label>
        <link refid="xdrfile_xtc.c"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="xdrfile__xtc_8c_1a94630370ae389fb1189282fa0742f310" prot="public" static="no">
        <name>MAGIC</name>
        <initializer>1995</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="18" column="9" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="xdrfile__xtc_8c_1adf764cbdea00d65edcd07bb9953ad2b7" prot="public" static="no">
        <name>@1</name>
        <enumvalue id="xdrfile__xtc_8c_1adf764cbdea00d65edcd07bb9953ad2b7aa1e095cc966dbecf6a0d8aad75348d1a" prot="public">
          <name>FALSE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="xdrfile__xtc_8c_1adf764cbdea00d65edcd07bb9953ad2b7aa82764c3079aea4e60c80e45befbb839" prot="public">
          <name>TRUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="20" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="20" bodyend="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xdrfile__xtc_8c_1a38c734d99374ae620606574c0b609413" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int xtc_header</definition>
        <argsstring>(XDRFILE *xd, int *natoms, int *step, float *time, mybool bRead)</argsstring>
        <name>xtc_header</name>
        <param>
          <type><ref refid="structXDRFILE" kindref="compound">XDRFILE</ref> *</type>
          <declname>xd</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>natoms</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>step</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>mybool</type>
          <declname>bRead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="22" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="22" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="xdrfile__xtc_8c_1a84f781009f40ef23411f9664ca76ad49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int xtc_coord</definition>
        <argsstring>(XDRFILE *xd, int *natoms, matrix box, rvec *x, float *prec, mybool bRead)</argsstring>
        <name>xtc_coord</name>
        <param>
          <type><ref refid="structXDRFILE" kindref="compound">XDRFILE</ref> *</type>
          <declname>xd</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>natoms</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>box</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>prec</declname>
        </param>
        <param>
          <type>mybool</type>
          <declname>bRead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="47" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="47" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="xdrfile__xtc_8c_1ac98c3975f7ac57523593d57dce0ccbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_xtc_natoms</definition>
        <argsstring>(char *fn, int *natoms)</argsstring>
        <name>read_xtc_natoms</name>
        <param>
          <type>char *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>natoms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="74" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="74" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="xdrfile__xtc_8c_1addcbdda2ac3d07be6f2fb848f5a6a49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read_xtc</definition>
        <argsstring>(XDRFILE *xd, int natoms, int *step, float *time, matrix box, rvec *x, float *prec)</argsstring>
        <name>read_xtc</name>
        <param>
          <type><ref refid="structXDRFILE" kindref="compound">XDRFILE</ref> *</type>
          <declname>xd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>natoms</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>step</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>time</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>box</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>prec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="89" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="89" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="xdrfile__xtc_8c_1a8551638165b466882a1dc096bfd236b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write_xtc</definition>
        <argsstring>(XDRFILE *xd, int natoms, int step, float time, matrix box, rvec *x, float prec)</argsstring>
        <name>write_xtc</name>
        <param>
          <type><ref refid="structXDRFILE" kindref="compound">XDRFILE</ref> *</type>
          <declname>xd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>natoms</declname>
        </param>
        <param>
          <type>int</type>
          <declname>step</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <param>
          <type>matrix</type>
          <declname>box</declname>
        </param>
        <param>
          <type>rvec *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>prec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c" line="105" column="1" bodyfile="/home/wes/libgmxcpp/src/xdrfile_xtc.c" bodystart="105" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>t;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/></highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>$Id$</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Erik<sp/>Lindahl,<sp/>David<sp/>van<sp/>der<sp/>Spoel<sp/>2003,2004.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Coordinate<sp/>compression<sp/>(c)<sp/>by<sp/>Frans<sp/>van<sp/>Hoesel.<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xdrfile_8h" kindref="compound">gmxcpp/xdrfile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmxcpp/xdrfile_xtc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAGIC<sp/>1995</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>FALSE,<sp/>TRUE<sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xtc_header(<ref refid="structXDRFILE" kindref="compound">XDRFILE</ref><sp/>*xd,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*natoms,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*step,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*time,mybool<sp/>bRead)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result,magic,n=1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Note:<sp/>read<sp/>is<sp/>same<sp/>as<sp/>write.<sp/>He<sp/>he<sp/>he<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>magic<sp/><sp/>=<sp/>MAGIC;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/><ref refid="xdrfile_8h_1aebeea86c177fe409a3b737f93674137f" kindref="member">xdrfile_write_int</ref>(&amp;magic,n,xd))<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bRead)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrENDOFFILE;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrINT;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magic<sp/>!=<sp/>MAGIC)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrMAGIC;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/><ref refid="xdrfile_8h_1aebeea86c177fe409a3b737f93674137f" kindref="member">xdrfile_write_int</ref>(natoms,n,xd))<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrINT;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/><ref refid="xdrfile_8h_1aebeea86c177fe409a3b737f93674137f" kindref="member">xdrfile_write_int</ref>(step,n,xd))<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrINT;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/><ref refid="xdrfile_8h_1a07b2f0fbacf3d25f6d6601e6c4285cdf" kindref="member">xdrfile_write_float</ref>(time,n,xd))<sp/>!=<sp/>n)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrFLOAT;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrOK;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xtc_coord(<ref refid="structXDRFILE" kindref="compound">XDRFILE</ref><sp/>*xd,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*natoms,matrix<sp/>box,rvec<sp/>*x,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*prec,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mybool<sp/>bRead)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,result;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xdrfile_8h_1a0284c6956e48e298820448fc86640e76" kindref="member">xdrfile_read_float</ref>(box[0],DIM*DIM,xd);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DIM*DIM<sp/>!=<sp/>result)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrFLOAT;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bRead)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xdrfile_8h_1a7e6af0e7fe9b3fd96c79ceba9ea3e7c3" kindref="member">xdrfile_decompress_coord_float</ref>(x[0],natoms,prec,xd);<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>*natoms)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdr3DX;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xdrfile_8h_1a91f4daa33bda1086fad70aa1c399e016" kindref="member">xdrfile_compress_coord_float</ref>(x[0],*natoms,*prec,xd);<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>*natoms)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdr3DX;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrOK;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_xtc_natoms(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fn,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*natoms)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structXDRFILE" kindref="compound">XDRFILE</ref><sp/>*xd;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,result;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>xd<sp/>=<sp/><ref refid="xdrfile_8h_1a8ae08773e2f7fab7b88a37bf530ea558" kindref="member">xdrfile_open</ref>(fn,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>xd)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrFILENOTFOUND;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>xtc_header(xd,natoms,&amp;step,&amp;time,TRUE);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xdrfile_8h_1ac6ed9a0cbb2e66e63be2765dec55ef45" kindref="member">xdrfile_close</ref>(xd);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_xtc(<ref refid="structXDRFILE" kindref="compound">XDRFILE</ref><sp/>*xd,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>natoms,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*step,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*time,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>box,rvec<sp/>*x,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*prec)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Read<sp/>subsequent<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>xtc_header(xd,&amp;natoms,step,time,TRUE))<sp/>!=<sp/>exdrOK)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>xtc_coord(xd,&amp;natoms,box,x,prec,1))<sp/>!=<sp/>exdrOK)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrOK;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>write_xtc(<ref refid="structXDRFILE" kindref="compound">XDRFILE</ref><sp/>*xd,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>natoms,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>box,rvec<sp/>*x,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>prec)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Write<sp/>a<sp/>frame<sp/>to<sp/>xtc<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>xtc_header(xd,&amp;natoms,&amp;step,&amp;time,FALSE))<sp/>!=<sp/>exdrOK)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>xtc_coord(xd,&amp;natoms,box,x,&amp;prec,0))<sp/>!=<sp/>exdrOK)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exdrOK;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wes/libgmxcpp/src/xdrfile_xtc.c"/>
  </compounddef>
</doxygen>
