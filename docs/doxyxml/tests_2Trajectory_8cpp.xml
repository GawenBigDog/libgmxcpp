<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="tests_2Trajectory_8cpp" kind="file" language="C++">
    <compoundname>Trajectory.cpp</compoundname>
    <includes local="no">assert.h</includes>
    <includes refid="tests_8h" local="yes">tests.h</includes>
    <includes refid="coordinates_8h" local="yes">gmxcpp/coordinates.h</includes>
    <includes refid="triclinicbox_8h" local="yes">gmxcpp/triclinicbox.h</includes>
    <includes refid="Trajectory_8h" local="yes">gmxcpp/Trajectory.h</includes>
    <incdepgraph>
      <node id="349">
        <label>sys/stat.h</label>
      </node>
      <node id="333">
        <label>gmxcpp/xdrfile.h</label>
        <link refid="xdrfile_8h"/>
      </node>
      <node id="344">
        <label>iomanip</label>
      </node>
      <node id="326">
        <label>tests/Trajectory.cpp</label>
        <link refid="tests/Trajectory.cpp"/>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
      </node>
      <node id="327">
        <label>assert.h</label>
      </node>
      <node id="351">
        <label>stdlib.h</label>
      </node>
      <node id="329">
        <label>cmath</label>
      </node>
      <node id="346">
        <label>stdexcept</label>
      </node>
      <node id="336">
        <label>gmxcpp/Trajectory.h</label>
        <link refid="Trajectory_8h"/>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
      </node>
      <node id="338">
        <label>string</label>
      </node>
      <node id="340">
        <label>gmxcpp/xdrfile_xtc.h</label>
        <link refid="xdrfile__xtc_8h_source"/>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="342">
        <label>fstream</label>
      </node>
      <node id="332">
        <label>gmxcpp/coordinates.h</label>
        <link refid="coordinates_8h"/>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="347">
        <label>gmxcpp/Utils.h</label>
        <link refid="Utils_8h"/>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>vector</label>
      </node>
      <node id="345">
        <label>sstream</label>
      </node>
      <node id="352">
        <label>time.h</label>
      </node>
      <node id="330">
        <label>math.h</label>
      </node>
      <node id="339">
        <label>gmxcpp/Frame.h</label>
        <link refid="Frame_8h"/>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>tests.h</label>
        <link refid="tests_8h_source"/>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="343">
        <label>cstdlib</label>
      </node>
      <node id="341">
        <label>gmxcpp/Index.h</label>
        <link refid="Index_8h"/>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
      </node>
      <node id="331">
        <label>iostream</label>
      </node>
      <node id="335">
        <label>gmxcpp/triclinicbox.h</label>
        <link refid="triclinicbox_8h"/>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="348">
        <label>algorithm</label>
      </node>
      <node id="350">
        <label>stdio.h</label>
      </node>
      <node id="337">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tests_2Trajectory_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/wes/libgmxcpp/tests/Trajectory.cpp" line="8" column="1" bodyfile="/home/wes/libgmxcpp/tests/Trajectory.cpp" bodystart="8" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tests.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="coordinates_8h" kindref="compound">gmxcpp/coordinates.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="triclinicbox_8h" kindref="compound">gmxcpp/triclinicbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Trajectory_8h" kindref="compound">gmxcpp/Trajectory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="example_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrajectory" kindref="compound">Trajectory</ref><sp/>t1(</highlight><highlight class="stringliteral">&quot;tests/test.xtc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetNAtoms(),4050));</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetNFrames(),1001));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetTime(0),0.0));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetTime(1),2.0));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetTime(1000),2000.0));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetStep(0),0));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetStep(1),1000));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetStep(1000),1000000));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc1<sp/>=<sp/>t1.GetXYZ(0,0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc2<sp/>=<sp/>t1.GetXYZ(500,2025);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc3<sp/>=<sp/>t1.GetXYZ(1000,4049);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>tb1<sp/>=<sp/>t1.GetBox(0);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>tb2<sp/>=<sp/>t1.GetBox(500);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtriclinicbox" kindref="compound">triclinicbox</ref><sp/>tb3<sp/>=<sp/>t1.GetBox(1000);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc1.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),1.635));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc1.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),2.921));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc1.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),3.370));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc2.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),2.350));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc2.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),2.473));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc2.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),1.098));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),1.035));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),1.206));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),1.402));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),4.0));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.0));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.0));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),0.0));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),4.0));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.0));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),0.0));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.0));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb1.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),4.0));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t1.GetBoxVolume(0),64.0));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),3.11876));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.0));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.0));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),0.0));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),3.11876));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.0));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),0.0));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.0));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb2.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),3.11876));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),3.14139));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.0));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.0));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),0.0));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),3.14139));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.0));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),0.0));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.0));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tb3.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>).at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),3.14139));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrajectory" kindref="compound">Trajectory</ref><sp/>t2(</highlight><highlight class="stringliteral">&quot;tests/test.xtc&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tests/test.ndx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t2.GetNAtoms(</highlight><highlight class="stringliteral">&quot;System&quot;</highlight><highlight class="normal">),4050));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t2.GetNAtoms(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">),10));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t2.GetNAtoms(</highlight><highlight class="stringliteral">&quot;SOL&quot;</highlight><highlight class="normal">),4000));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc4<sp/>=<sp/>t2.GetXYZ(0,</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc5<sp/>=<sp/>t2.GetXYZ(250,</highlight><highlight class="stringliteral">&quot;OW&quot;</highlight><highlight class="normal">,500);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc6<sp/>=<sp/>t2.GetXYZ(500,</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,9);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcoordinates" kindref="compound">coordinates</ref><sp/>tc7<sp/>=<sp/>t2.GetXYZ(1000,</highlight><highlight class="stringliteral">&quot;OW&quot;</highlight><highlight class="normal">,999);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc4.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),1.635));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc4.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),2.921));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc4.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),3.370));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc5.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),2.252));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc5.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),1.456));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc5.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),0.893));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc6.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),1.111));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc6.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),0.966));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc6.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),1.541));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc7.at(<ref refid="coordinates_8h_1a93188324f4ddec8d3bdac778e12231ba" kindref="member">X</ref>),1.040));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc7.at(<ref refid="coordinates_8h_1a4245f3c5e8eb90ade09427f989b098ec" kindref="member">Y</ref>),1.206));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(tc7.at(<ref refid="coordinates_8h_1ad6a5acba3306c0d145b10acd89c52126" kindref="member">Z</ref>),1.413));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrajectory" kindref="compound">Trajectory</ref><sp/>t3(</highlight><highlight class="stringliteral">&quot;tests/test.xtc&quot;</highlight><highlight class="normal">,10);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t3.GetNFrames(),10));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classTrajectory" kindref="compound">Trajectory</ref><sp/>t4(</highlight><highlight class="stringliteral">&quot;tests/test.xtc&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;tests/test.ndx&quot;</highlight><highlight class="normal">,10);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(test_equal(t4.GetNFrames(),10));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/wes/libgmxcpp/tests/Trajectory.cpp"/>
  </compounddef>
</doxygen>
